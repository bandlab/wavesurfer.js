{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/regions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Region","params","ws","this","wavesurfer","wrapper","drawer","util","style","id","getId","start","Number","end","scrollWidth","getDuration","resize","undefined","Boolean","drag","isResizing","isDragging","loop","color","data","attributes","maxLength","minLength","regionHighlight","regionTimestamp","_onRedraw","updateRender","scroll","scrollParent","scrollSpeed","scrollThreshold","bindInOut","render","on","fireEvent","element","removeChild","un","highlight","highlightCanvas","play","once","playLoop","regionEl","document","createElement","attrname","className","title","formatTime","setAttribute","position","zIndex","height","top","startTime","endTime","insertAdjacentHTML","handleLeft","appendChild","handleRight","css","cursor","width","maxWidth","left","right","origWave","querySelector","wave","cloneNode","getContext","drawImage","fillStyle","getProgressColor","globalCompositeOperation","fillRect","display","highlightEl","bottom","overflow","boxSizing","bindEvents","map","time","Math","floor","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","max","min","round","regionWidth","backgroundColor","getElementById","innerHTML","cssText","firedIn","firedOut","onProcess","backend","touchId","maxScroll","scrollDirection","wrapperRect","container","updated","onDown","onUp","onMove","addEventListener","e","preventDefault","stopPropagation","duration","touches","length","targetTouches","identifier","regions","getRegionSnapToGridValue","handleEvent","clientWidth","getBoundingClientRect","target","tagName","toLowerCase","classList","contains","preventClick","oldTime","delta","onDrag","onResize","regionRect","x","clientX","edgeScroll","scrollLeft","requestAnimationFrame","body","removeEventListener","maxEnd","update","direction","RegionsPlugin","getOwnPropertyNames","Observer","forEach","_onBackendCreated","region","add","list","_onReady","dragSelection","enableDragSelection","keys","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","clearRegions","clear","disableDragSelection","instance","isReady","remove","slop","pxMove","eventDown","eventUp","eventMove","startUpdate","endUpdate","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset"],"mappings":"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","file":"wavesurfer.regions.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"regions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"regions\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nclass Region {\n    constructor(params, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                  this.start +\n                  (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n\n        this.maxLength = params.maxLength;\n        this.minLength = params.minLength;\n        this.regionHighlight =\n            params.regionHighlight === undefined\n                ? false\n                : Boolean(params.regionHighlight);\n        this.regionTimestamp =\n            params.regionTimestamp === undefined\n                ? false\n                : Boolean(params.regionTimestamp);\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params) {\n        if (null != params.start) {\n            this.start = Number(params.start);\n        }\n        if (null != params.end) {\n            this.end = Number(params.end);\n        }\n        if (null != params.loop) {\n            this.loop = Boolean(params.loop);\n        }\n        if (null != params.color) {\n            this.color = params.color;\n        }\n        if (null != params.data) {\n            this.data = params.data;\n        }\n        if (null != params.resize) {\n            this.resize = Boolean(params.resize);\n        }\n        if (null != params.drag) {\n            this.drag = Boolean(params.drag);\n        }\n        if (null != params.maxLength) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (null != params.minLength) {\n            this.minLength = Number(params.minLength);\n        }\n        if (null != params.attributes) {\n            this.attributes = params.attributes;\n        }\n        if (null != params.regionHighlight) {\n            this.regionHighlight = Boolean(params.regionHighlight);\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n        if (this.highlight) {\n            this.wrapper.removeChild(this.highlight);\n            this.highlightCanvas = null;\n            this.highlight = null;\n        }\n    }\n\n    /* Play the audio region. */\n    play() {\n        this.wavesurfer.play(this.start, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /* Play the region in loop. */\n    playLoop() {\n        this.play();\n        this.once('out', () => this.playLoop());\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        const regionEl = document.createElement('region');\n        regionEl.className = 'wavesurfer-region';\n        regionEl.title = this.formatTime(this.start, this.end);\n        regionEl.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            regionEl.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(regionEl, {\n            position: 'absolute',\n            zIndex: 2,\n            height: '100%',\n            top: '0px'\n        });\n        const startTime = `<span id=\"startTime\">${this.start}</span>`;\n        const endTime = `<span id=\"endTime\">${this.end}</span>`;\n        regionEl.insertAdjacentHTML('beforeend', startTime);\n        regionEl.insertAdjacentHTML('beforeend', endTime);\n\n        /* Resize handles */\n        if (this.resize) {\n            const handleLeft = regionEl.appendChild(\n                document.createElement('handle')\n            );\n            const handleRight = regionEl.appendChild(\n                document.createElement('handle')\n            );\n            handleLeft.className = 'wavesurfer-handle wavesurfer-handle-start';\n            handleRight.className = 'wavesurfer-handle wavesurfer-handle-end';\n            const css = {\n                cursor: 'col-resize',\n                position: 'absolute',\n                top: '0px',\n                width: '1%',\n                maxWidth: '4px',\n                height: '100%'\n            };\n            this.style(handleLeft, css);\n            this.style(handleLeft, {\n                left: '0px'\n            });\n            this.style(handleRight, css);\n            this.style(handleRight, {\n                right: '0px'\n            });\n        }\n        if (this.regionHighlight) {\n            const origWave = this.wrapper.querySelector('wave canvas');\n\n            const wave = origWave.cloneNode();\n\n            const highlightCanvas = wave.getContext('2d');\n            highlightCanvas.drawImage(origWave, 0, 0);\n            highlightCanvas.fillStyle = this.wavesurfer.getProgressColor();\n            highlightCanvas.globalCompositeOperation = 'source-in';\n            highlightCanvas.fillRect(0, 0, wave.width, wave.height);\n\n            this.style(this.wrapper.querySelector('wave wave canvas'), {\n                display: 'none'\n            });\n\n            const highlightEl = document.createElement('highlight');\n            highlightEl.setAttribute('data-id', this.id);\n            highlightEl.className = 'wavesurfer-region-highlight';\n            highlightEl.appendChild(wave);\n\n            this.style(highlightEl, {\n                position: 'absolute',\n                zIndex: 2,\n                left: '0px',\n                top: '0px',\n                bottom: '0px',\n                overflow: 'hidden',\n                width: '0',\n                display: 'block',\n                boxSizing: 'border-box'\n            });\n\n            this.highlight = this.wrapper.appendChild(highlightEl);\n            this.highlightCanvas = wave;\n        }\n\n        this.element = this.wrapper.appendChild(regionEl);\n        this.updateRender();\n        this.bindEvents(regionEl);\n    }\n\n    formatTime(start, end) {\n        return (start == end ? [start] : [start, end])\n            .map(time =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        var startLimited = this.start;\n        var endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            if (this.regionHighlight) {\n                this.style(this.highlight, {\n                    left: left + 'px',\n                    width: ~~(((this.end - this.start) / dur) * width) + 'px'\n                });\n\n                this.style(this.highlightCanvas, {\n                    left: -left + 'px'\n                });\n            }\n            if (this.regionTimestamp) {\n                const startTime = document.getElementById('startTime');\n                startTime.innerHTML = `${Math.floor(\n                    (this.start % 3600) / 60\n                )}:${('00' + Math.floor(this.start % 60)).slice(-2)}`;\n                startTime.style.cssText =\n                    'position: absolute;top: -20px;left: -10px;';\n                startTime.className = 'region-time-indicator';\n                const endTime = document.getElementById('endTime');\n                endTime.innerHTML = `${Math.floor((this.end % 3600) / 60)}:${(\n                    '00' + Math.floor(this.end % 60)\n                ).slice(-2)}`;\n                endTime.style.cssText =\n                    'position: absolute;top: -20px;right: -10px;';\n                endTime.className = 'region-time-indicator';\n                this.element.title = this.formatTime(this.start, this.end);\n            }\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = time => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                this.wavesurfer.play(this.start);\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        this.element.addEventListener('mouseenter', e => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', e => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', e => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        (this.drag || this.resize) &&\n            (() => {\n                const container = this.wavesurfer.drawer.container;\n                const scrollSpeed = this.scrollSpeed;\n                const scrollThreshold = this.scrollThreshold;\n                let startTime;\n                let touchId;\n                let drag;\n                let maxScroll;\n                let resize;\n                let updated = false;\n                let scrollDirection;\n                let wrapperRect;\n\n                // Scroll when the user is dragging within the threshold\n                const edgeScroll = e => {\n                    const duration = this.wavesurfer.getDuration();\n                    if (!scrollDirection || (!drag && !resize)) {\n                        return;\n                    }\n\n                    // Update scroll position\n                    let scrollLeft =\n                        this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n                    this.wrapper.scrollLeft = scrollLeft = Math.min(\n                        maxScroll,\n                        Math.max(0, scrollLeft)\n                    );\n\n                    // Get the currently selected time according to the mouse position\n                    const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                        this.wavesurfer.drawer.handleEvent(e) * duration\n                    );\n                    const delta = time - startTime;\n                    startTime = time;\n\n                    // Continue dragging or resizing\n                    drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n                    // Repeat\n                    window.requestAnimationFrame(() => {\n                        edgeScroll(e);\n                    });\n                };\n\n                const onDown = e => {\n                    const duration = this.wavesurfer.getDuration();\n                    if (e.touches && e.touches.length > 1) {\n                        return;\n                    }\n                    touchId = e.targetTouches\n                        ? e.targetTouches[0].identifier\n                        : null;\n\n                    // stop the event propagation, if this region is resizable or draggable\n                    // and the event is therefore handled here.\n                    if (this.drag || this.resize) {\n                        e.stopPropagation();\n                    }\n\n                    // Store the selected startTime we begun dragging or resizing\n                    startTime = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                        this.wavesurfer.drawer.handleEvent(e, true) * duration\n                    );\n\n                    // Store for scroll calculations\n                    maxScroll =\n                        this.wrapper.scrollWidth - this.wrapper.clientWidth;\n                    wrapperRect = this.wrapper.getBoundingClientRect();\n\n                    this.isResizing = false;\n                    this.isDragging = false;\n                    if (e.target.tagName.toLowerCase() === 'handle') {\n                        this.isResizing = true;\n                        if (\n                            e.target.classList.contains(\n                                'wavesurfer-handle-start'\n                            )\n                        ) {\n                            resize = 'start';\n                        } else {\n                            resize = 'end';\n                        }\n                    } else {\n                        this.isDragging = true;\n                        drag = true;\n                        resize = false;\n                    }\n                };\n                const onUp = e => {\n                    if (e.touches && e.touches.length > 1) {\n                        return;\n                    }\n\n                    if (drag || resize) {\n                        this.isDragging = false;\n                        this.isResizing = false;\n                        drag = false;\n                        scrollDirection = null;\n                        resize = false;\n                    }\n\n                    if (updated) {\n                        updated = false;\n                        this.util.preventClick();\n                        this.fireEvent('update-end', e);\n                        this.wavesurfer.fireEvent('region-update-end', this, e);\n                    }\n                };\n                const onMove = e => {\n                    const duration = this.wavesurfer.getDuration();\n\n                    if (e.touches && e.touches.length > 1) {\n                        return;\n                    }\n                    if (\n                        e.targetTouches &&\n                        e.targetTouches[0].identifier != touchId\n                    ) {\n                        return;\n                    }\n\n                    if (drag || resize) {\n                        const oldTime = startTime;\n                        const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                            this.wavesurfer.drawer.handleEvent(e) * duration\n                        );\n\n                        const delta = time - startTime;\n                        startTime = time;\n\n                        // Drag\n                        if (this.drag && drag) {\n                            updated = updated || !!delta;\n                            this.onDrag(delta);\n                        }\n\n                        // Resize\n                        if (this.resize && resize) {\n                            updated = updated || !!delta;\n                            this.onResize(delta, resize);\n                        }\n\n                        if (\n                            this.scroll &&\n                            container.clientWidth < this.wrapper.scrollWidth\n                        ) {\n                            if (drag) {\n                                // The threshold is not between the mouse and the container edge\n                                // but is between the region and the container edge\n                                const regionRect = this.element.getBoundingClientRect();\n                                let x = regionRect.left - wrapperRect.left;\n\n                                // Check direction\n                                if (time < oldTime && x >= 0) {\n                                    scrollDirection = -1;\n                                } else if (\n                                    time > oldTime &&\n                                    x + regionRect.width <= wrapperRect.right\n                                ) {\n                                    scrollDirection = 1;\n                                }\n\n                                // Check that we are still beyond the threshold\n                                if (\n                                    (scrollDirection === -1 &&\n                                        x > scrollThreshold) ||\n                                    (scrollDirection === 1 &&\n                                        x + regionRect.width <\n                                            wrapperRect.right - scrollThreshold)\n                                ) {\n                                    scrollDirection = null;\n                                }\n                            } else {\n                                // Mouse based threshold\n                                let x = e.clientX - wrapperRect.left;\n\n                                // Check direction\n                                if (x <= scrollThreshold) {\n                                    scrollDirection = -1;\n                                } else if (\n                                    x >=\n                                    wrapperRect.right - scrollThreshold\n                                ) {\n                                    scrollDirection = 1;\n                                } else {\n                                    scrollDirection = null;\n                                }\n                            }\n\n                            scrollDirection && edgeScroll(e);\n                        }\n                    }\n                };\n\n                this.element.addEventListener('mousedown', onDown);\n                this.element.addEventListener('touchstart', onDown);\n\n                this.wrapper.addEventListener('mousemove', onMove);\n                this.wrapper.addEventListener('touchmove', onMove);\n\n                document.body.addEventListener('mouseup', onUp);\n                document.body.addEventListener('touchend', onUp);\n\n                this.on('remove', () => {\n                    document.body.removeEventListener('mouseup', onUp);\n                    document.body.removeEventListener('touchend', onUp);\n                    this.wrapper.removeEventListener('mousemove', onMove);\n                    this.wrapper.removeEventListener('touchmove', onMove);\n                });\n\n                this.wavesurfer.on('destroy', () => {\n                    document.body.removeEventListener('mouseup', onUp);\n                    document.body.removeEventListener('touchend', onUp);\n                });\n            })();\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd || this.start + delta < 0) {\n            return;\n        }\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        });\n    }\n\n    onResize(delta, direction) {\n        if (direction === 'start') {\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            });\n        } else {\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            });\n        }\n    }\n}\n\n/**\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('regions')`\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n */\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n        this.util.getRegionSnapToGridValue = value => {\n            return this.getRegionSnapToGridValue(value, params);\n        };\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        const region = new this.wavesurfer.Region(params, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n        });\n\n        const eventMove = e => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            if (!region) {\n                region = this.add(params || {});\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = e.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(e);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n"],"sourceRoot":""}